#/bin/bash
## AdvCecho is NewCecho with added colors.
# TODO: Determine regular vs bold, e.g: 0;31 vs 1;31
#	Add Underline/Background/High_Intensity/Bold_High_Intensity/High_Intensity_Backgrounds
# 	Portions Taken From: https://gkarthiks.github.io/quick-commands-cheat-sheet/bash_command.html

advcecho() {
        local code="\033["
        case "$1" in
                black  | bk) color="${code}0;30m";;
                red    |  r) color="${code}0;31m";; 
                green  |  g) color="${code}0;32m";; 
                yellow |  y) color="${code}0;33m";; 
                blue   |  b) color="${code}0;34m";; 
                purple |  p) color="${code}0;35m";; 
                cyan   |  c) color="${code}0;36m";; 
                white  |  w) color="${code}1;37m";; # is this color white or gray?
                lightgray   | gr) color="${code}0;37m";; # same as white - for now.
                lightgrey   | gr) color="${code}0;37m";; # alias of gray.
		darkgray   | gr) color="${code}1;30m";; # same as white - for now.
                darkgrey   | gr) color="${code}1;30m";; # alias of gray.
                
	#### Default case.
             #   *) local text="$1"
             *) local text="Usage: advcecho <color> <text> - text must be inside double quotes."
        esac
        [ -z "$text" ] && local text="$color$2${code}0m"
        echo -e "$text"
}

### Test Display - WORKS!! ###
function DisplayTest() {
advcecho b "This is blue"
advcecho r "This is red"
advcecho yellow "This is yellow"
advcecho white "This is white"
advcecho lightgray "This is lightgray"
advcecho darkgray "This is darkgray"
}

### Usage ###
function Usage() {
echo "advcecho <color> <text>"
echo "Where <color> is one of black/red/green/yellow/blue/purple/cyan/white/lightgray/darkgray"
echo "and <text> is what you want to be echoed."
}
