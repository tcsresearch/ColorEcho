#/bin/bash
## AdvCecho_Bold is NewCecho with added colors.
# TODO: Determine regular vs bold, e.g: 0;31 vs 1;31
#	Add Underline/Background/High_Intensity/Bold_High_Intensity/High_Intensity_Backgrounds

advcecho_Bold() {
        local code="\033["
        case "$1" in
                black  | bk) color="${code}1;30m";;
                red    |  r) color="${code}1;31m";; # is this bold?
                green  |  g) color="${code}1;32m";; # is this bold?
                yellow |  y) color="${code}1;33m";; # is this bold?
                blue   |  b) color="${code}1;34m";; # is this bold?
                purple |  p) color="${code}1;35m";; # is this bold?
                cyan   |  c) color="${code}1;36m";; # is this bold?
                white  |  w) color="${code}1;37m";; # is this color white or gray?
                gray   | gr) color="${code}1;37m";; # same as white - for now.
                grey   | gr) color="${code}1;37m";; # alias of gray.
                
	#### Default case.
             #   *) local text="$1"
             *) local text="Usage: cecho <color> <text> - text must be inside double quotes."
        esac
        [ -z "$text" ] && local text="$color$2${code}0m"
        echo -e "$text"
}

### Test Display - WORKS!! ###
function DisplayTest() {
cecho b "This is blue"
cecho r "This is red"
cecho yellow "This is yellow"
cecho white "This is white"
cecho gray "This is gray"
}

### Usage ###
function Usage() {
echo "cecho <color> <text>"
echo "Where <color> is one of black/red/green/yellow/blue/purple/cyan/gray"
echo "and <text> is what you want to be echoed."
}
